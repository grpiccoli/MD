@model (string[], string)
@using ConsultaMD.Services

@{
    var style = $"{Model.Item2}Styles";
    var script = $"{Model.Item2}Scripts";
    bool dev = true;
    <environment exclude="Development">
        @{
            dev = false;
        }
    </environment>
    foreach (var lib in Model.Item1)
    {
        var continuar = false;
        foreach (var bundle in Bundler.GetBundles(lib))
        {
            var file = bundle.outputFileName.Replace("wwwroot", "~");
            if (file.Contains(".css"))
            {
                if (dev)
                {
                    foreach (var input in bundle.inputFiles)
                    {
                        this.Block(@<link href="@input.Insert(0, "~/")" rel="stylesheet" asp-append-version="true" />, style);
                    }
                }
                else
                {
                    this.Block(@<link href="@file" rel="stylesheet" asp-append-version="true" />, style);
                }
            }
else
{
if (dev)
{
foreach (var input in bundle.inputFiles)
{
this.Block(@<script src="@input.Insert(0, "~/")" asp-append-version="true"></script>, script);
}
}
else
{
this.Block(@<script src="@file" asp-append-version="true"></script>, script);
}
}
continuar = true;
}
if (continuar) { continue; }
var l = Libman.GetLibs(lib);
foreach (var file in l?.files)
{
if (dev)
{
if (file.Contains(".css"))
{
this.Block(@<link href="@($"{l.destination.Replace("wwwroot", "")}{file}")" rel="stylesheet" />, style);
}
else if (file.Contains(".js"))
{
this.Block(@<script src="@($"{l.destination.Replace("wwwroot", "")}{file}")"></script>, script);
}
}
else
{
var url = "unpkg.com";
switch (l.provider)
{
case "cdnjs":
l.library = l.library.Replace("@", "/");
url = "cdnjs.cloudflare.com/ajax/libs";
break;
case "":
default:
l.provider = "unpkg";
break;
}
if (file.Contains(".css"))
{
this.Block(@<link href="@($"{Context.Request.Scheme}://{url}/{l.library}/{file}")" rel="stylesheet"
                  asp-fallback-href="@($"{l.destination.Replace("wwwroot", "")}{file}")"
                  asp-subresource-integrity-href="@($"{l.destination.Replace("wwwroot", "")}{file}")" />, style);
}
else if (file.Contains(".js"))
{
this.Block(@<script src="@($"{Context.Request.Scheme}://{url}/{l.library}/{file}")"
                    asp-fallback-src="@($"{l.destination.Replace("wwwroot", "")}{file}")"
                    asp-subresource-integrity-src="@($"{l.destination.Replace("wwwroot", "")}{file}")"></script>, script);
}
}
}
}
}